##
# Copyright (c) 2008-2010 MagicStack Inc.
# All rights reserved.
#
# See LICENSE for details.
##


%SCHEMA edgedb.server.datasources.schemas.Sql
%NAME ConceptLink
---
params:
    name:
        type: str

filters:
    - format: dict

source: |
    SELECT
            l.id,
            sc.name AS source,
            tc.name AS target,
            l.name AS name,
            l.mapping
        FROM
            edgedb.link l
            INNER JOIN edgedb.concept sc ON l.source = sc.id
            INNER JOIN edgedb.concept tc ON l.target = tc.id
        WHERE
            %(name)s = l.name

...

%SCHEMA edgedb.server.datasources.schemas.Sql
%NAME ConceptLinks
---
params:
    source_concept:
        type: str
        default: null

    target_concept:
        type: str
        default: null

    name:
        type: str
        default: null

    include_specialized:
        type: bool
        default: True

filters:
    - format: dict

source: |
    SELECT
            l.id,
            _resolve_type(l.source) AS source,
            _resolve_type(l.target) AS target,
            _resolve_types(l.spectargets) AS spectargets,
            l.name AS name,
            _resolve_types(l.bases) AS bases,
            l.mapping,
            l.exposed_behaviour,
            l.required,
            l.title,
            l.description,
            l.is_abstract,
            l.is_final,
            l.readonly,
            l.loading,
            l.default
        FROM
            edgedb.link l
        WHERE
            (%(name)s::text IS NULL OR %(name)s::text = l.name)
            AND (%(include_specialized)s::bool OR l.source IS NULL)
        ORDER BY
            l.name LIKE 'std::%' DESC, l.id, l.target NULLS FIRST
...

%SCHEMA edgedb.server.datasources.schemas.Sql
%NAME LinkProperties
---
params:
    source:
        type: str
        default: null

    target:
        type: str
        default: null

    name:
        type: str
        default: null

    include_specialized:
        type: bool
        default: True

filters:
    - format: dict

source: |
    SELECT
            p.id                    AS id,
            p.name                  AS name,
            _resolve_types(p.bases) AS bases,
            p.title                 AS title,
            p.description           AS description,
            p.required              AS required,
            p.readonly              AS readonly,
            p.loading               AS loading,
            p.default               AS default,
            l.name                  AS source,
            _resolve_type(p.target) AS target
        FROM
            edgedb.LinkProperty p
            LEFT JOIN edgedb.link l ON l.id = p.source
        WHERE
            (%(name)s::text IS NULL OR %(name)s::text = p.name)
            AND (%(include_specialized)s::bool OR p.source IS NULL)
        ORDER BY
            p.id, p.target NULLS FIRST

...
