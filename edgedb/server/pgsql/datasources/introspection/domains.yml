##
# Copyright (c) 2008-2010 Sprymix Inc.
# All rights reserved.
#
# See LICENSE for details.
##


%SCHEMA semantix.caos.datasources.schemas.Sql
%NAME DomainsList
---
params:
    schema_name:
        type: str
        default: "public"

    domain_name:
        type: str
        default: null

filters:
    - format: dict

source: |
        SELECT
                t.oid                                 AS oid,
                t.typname                             AS name,
                ns.nspname                            AS schema,

                CASE WHEN t.typbasetype != 0 THEN
                    format_type(t.typbasetype, t.typtypmod)
                ELSE
                    NULL
                END                                 AS basetype_full,

                CASE WHEN t.typbasetype != 0 THEN
                    format_type(t.typbasetype, NULL)
                ELSE
                    NULL
                END                                 AS basetype,

                bns.nspname                         AS basetype_schema,

                ARRAY(SELECT
                            pg_get_constraintdef(c.oid, true)
                        FROM
                            pg_constraint AS c
                        WHERE
                            c.contypid = t.oid
                        ORDER BY
                            c.oid)                  AS constraints,

                ARRAY(SELECT
                            c.conname
                        FROM
                            pg_constraint AS c
                        WHERE
                            c.contypid = t.oid
                        ORDER BY
                            c.oid)                  AS constraint_names,

                t.typdefault                        AS default
            FROM
                pg_type AS t
                INNER JOIN pg_namespace AS ns ON ns.oid = t.typnamespace
                LEFT JOIN pg_class AS c ON c.reltype = t.oid
                LEFT JOIN pg_type AS bt ON t.typbasetype = bt.oid
                LEFT JOIN pg_namespace AS bns ON bns.oid = bt.typnamespace
            WHERE
                --
                -- Limit the schema scope
                --
                ns.nspname LIKE %(schema_name)s

                AND (%(domain_name)s::text IS NULL OR t.typname LIKE %(domain_name)s::text)

                --
                -- We're not interested in shell- or pseudotypes or arrays or table row types
                --
                AND t.typisdefined AND t.typtype != 'p' AND (t.typelem IS NULL OR t.typelem = 0)
                AND (c.oid IS NULL OR c.relkind = 'c')
