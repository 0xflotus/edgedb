##
# Copyright (c) 2008-2010 Sprymix Inc.
# All rights reserved.
#
# See LICENSE for details.
##


code:
    from metamagic.utils.parsing import ParserContext, SourcePoint
    from metamagic.utils.gis.serialization.wkt.errors import WKTSyntaxError
    from metamagic.utils.datastructures import xvalue

    def make_tag(value):
        has_m = has_z = False
        if value[-1] == 'M':
            has_m = True
            value = value[:-1]
        if value[-1] == 'Z':
            has_z = True
            value = value[:-1]
        return xvalue(value, has_z=has_z, has_m=has_m)


definitions:
    space                   "[ \t\n\r]"
    newline                 "[\n\r]"
    whitespace              "{space}+"

    digit                   "[0-9]"

    integer                 "-?{digit}+"
    decimal                 "-?(({digit}*\.{digit}+)|({digit}+\.{digit}*))"
    real                    "({integer}|{decimal})"

    dimensionality          "(Z|M|ZM)?"

    other                   "."


INITIAL:
    "{whitespace}":
        return

    "{newline}":
        self.newline()

    "{real}":
        self.value = float(self.value)
        return 'FCONST'

    "SRID=-?[0-9]+":
        self.value = int(self.value[5:])
        return 'SRID'

    "POINT{dimensionality}":
        self.value = make_tag(self.value)
        return 'POINT'

    "LINESTRING{dimensionality}":
        self.value = make_tag(self.value)
        return 'LINESTRING'

    "POLYGON{dimensionality}":
        self.value = make_tag(self.value)
        return 'POLYGON'

    "MULTIPOINT{dimensionality}":
        self.value = make_tag(self.value)
        return 'MULTIPOINT'

    "MULTILINESTRING{dimensionality}":
        self.value = make_tag(self.value)
        return 'MULTILINESTRING'

    "MULTIPOLYGON{dimensionality}":
        self.value = make_tag(self.value)
        return 'MULTIPOLYGON'

    "GEOMETRYCOLLECTION{dimensionality}":
        self.value = make_tag(self.value)
        return 'GEOMETRYCOLLECTION'

    "CIRCULARSTRING{dimensionality}":
        self.value = make_tag(self.value)
        return 'CIRCULARSTRING'

    "COMPOUNDCURVE{dimensionality}":
        self.value = make_tag(self.value)
        return 'COMPOUNDCURVE'

    "CURVEPOLYGON{dimensionality}":
        self.value = make_tag(self.value)
        return 'CURVEPOLYGON'

    "MULTICURVE{dimensionality}":
        self.value = make_tag(self.value)
        return 'MULTICURVE'

    "MULTISURFACE{dimensionality}":
        self.value = make_tag(self.value)
        return 'MULTISURFACE'

    "CURVE{dimensionality}":
        self.value = make_tag(self.value)
        return 'CURVE'

    "SURFACE{dimensionality}":
        self.value = make_tag(self.value)
        return 'SURFACE'

    "POLYHEDRALSURFACE{dimensionality}":
        self.value = make_tag(self.value)
        return 'POLYHEDRALSURFACE'

    "TIN{dimensionality}":
        self.value = make_tag(self.value)
        return 'TIN'

    "TRIANGLE{dimensionality}":
        self.value = make_tag(self.value)
        return 'TRIANGLE'

    "EMPTY":
        return 'EMPTY'

    "\(":
        return 'LPARENTHESIS'

    "\)":
        return 'RPARENTHESIS'

    ",":
        return 'COMMA'

    ";":
        return 'SEMICOLON'

    "{other}":
        raise WKTSyntaxError(token=self.value, context=self.context())
