/**
 * Copyright (c) 2013-2014 MagicStack Inc.
 * All rights reserved.
 *
 * See LICENSE for details.
 */


export UUID


from metamagic.utils.lang.jplus import byteutils

from javascript import Math


class UUID {
    fn constructor(hex) {
        if isinstance(hex, String) {
            this.hex = hex.replace(/[\-\s]/g, '')
        } else {
            this._bytes = hex
            this.hex = byteutils.hexlify(hex)
        }
    }

    fn toHex() {
        return this.hex
    }

    fn toBytes() {
        if this._bytes {
            return this._bytes
        }

        this._bytes = byteutils.unhexlify(this.hex)
        return this._bytes
    }

    fn __string__() {
        if this._str {
            return this._str
        }

        h = this.hex
        this._str = h.slice(0, 8) + '-' + h.slice(8, 12) + '-' +
                    h.slice(12, 16) + '-' + h.slice(16, 20) + '-' +
                    h.slice(20, 32)
        return this._str
    }

    fn __value__() {
        return this.__string__()
    }

    static fn uuid4() {
        s = fn(num) => (((1 + Math.random()) * num) | 0).toString(16)
        hex = s(0x10000000) + '-' + s(0x1000) + '-4' + s(0x100) + '-a' +
              s(0x100) + '-' + s(0x1000) + s(0x1000) + s(0x1000)

        return new this(hex)
    }
}
