#
# This source file is part of the EdgeDB open source project.
#
# Copyright 2016-present MagicStack Inc. and the EdgeDB authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


## String functions


CREATE FUNCTION
std::lower(str: std::str) -> std::str
    FROM SQL FUNCTION 'lower';


## String operators

CREATE INFIX OPERATOR
std::`=` (l: std::str, r: std::str) -> std::bool
    FROM SQL OPERATOR r'=';


CREATE INFIX OPERATOR
std::`?=` (l: OPTIONAL std::str, r: OPTIONAL std::str) -> std::bool
    FROM SQL EXPRESSION;


CREATE INFIX OPERATOR
std::`!=` (l: std::str, r: std::str) -> std::bool
    FROM SQL OPERATOR r'<>';


CREATE INFIX OPERATOR
std::`?!=` (l: OPTIONAL std::str, r: OPTIONAL std::str) -> std::bool
    FROM SQL EXPRESSION;


# Concatenation.
CREATE INFIX OPERATOR
std::`++` (l: std::str, r: std::str) -> std::str
    FROM SQL OPERATOR '||';


CREATE INFIX OPERATOR
std::`LIKE` (string: std::str, pattern: std::str) -> std::bool
    FROM SQL EXPRESSION;


CREATE INFIX OPERATOR
std::`ILIKE` (string: std::str, pattern: std::str) -> std::bool
    FROM SQL EXPRESSION;


CREATE INFIX OPERATOR
std::`NOT LIKE` (string: std::str, pattern: std::str) -> std::bool
    FROM SQL EXPRESSION;


CREATE INFIX OPERATOR
std::`NOT ILIKE` (string: std::str, pattern: std::str) -> std::bool
    FROM SQL EXPRESSION;


CREATE INFIX OPERATOR
std::`<` (l: std::str, r: std::str) -> std::bool
    FROM SQL OPERATOR r'<';


CREATE INFIX OPERATOR
std::`<=` (l: std::str, r: std::str) -> std::bool
    FROM SQL OPERATOR r'<=';


CREATE INFIX OPERATOR
std::`>` (l: std::str, r: std::str) -> std::bool
    FROM SQL OPERATOR r'>';


CREATE INFIX OPERATOR
std::`>=` (l: std::str, r: std::str) -> std::bool
    FROM SQL OPERATOR r'>=';
